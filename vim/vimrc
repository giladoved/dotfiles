" Gilad Oved, .vimrc
" July 2017

" ========= Setup =========

" Essential settings for vimrc
set nocompatible

" Install vim plugins
if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

" ========= Options =========

syntax on
set hlsearch
set number
set showmatch
set incsearch
set background=dark
set hidden
set visualbell
set backspace=indent,eol,start
set textwidth=0 nosmartindent tabstop=2 shiftwidth=2 softtabstop=2 expandtab
set wrap
set dir=/tmp//
set scrolloff=5
set ignorecase
set smartcase
set wildignore+=*.pyc,*.o,*.class,*.lo,.git
set mouse=

if version >= 703
  set undodir=~/.vim/undodir
  set undofile
  set undoreload=10000
endif
set undolevels=1000

" File Types
augroup markdown
  au!
  au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown
augroup END

autocmd FileType tex setlocal textwidth=78
autocmd BufNewFile,BufRead *.txt setlocal textwidth=78

if version >= 700
  autocmd BufNewFile,BufRead *.txt setlocal spell spelllang=en_us
  autocmd FileType tex setlocal spell spelllang=en_us
endif

" Highlight trailing whitespace
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd BufRead,InsertLeave * match ExtraWhitespace /\s\+$/

" Autoremove trailing spaces when saving the buffer
autocmd FileType c,cpp,elixir,eruby,html,java,javascript,php,ruby autocmd BufWritePre <buffer> :%s/\s\+$//e

" Highlight too-long lines
autocmd BufRead,InsertEnter,InsertLeave * 2match LineLengthError /\%126v.*/
highlight LineLengthError ctermbg=black guibg=black
autocmd ColorScheme * highlight LineLengthError ctermbg=black guibg=black

" Set up highlight group & retain through colorscheme changes
highlight ExtraWhitespace ctermbg=red guibg=red
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red

syntax enable

" Base16 vim colorscheme
if filereadable(expand("~/.vimrc_background"))
  let base16colorspace=256
  source ~/.vimrc_background
endif

"set background=dark
"colorscheme solarized
"colorscheme monokai
colorscheme base16-oceanicnext

" ========= Plugin Options ========

let NERDTreeIgnore=['\.pyc$', '\.o$', '\.class$', '\.lo$']

" Not working...
set wildignore+=*.pyc,*.o,*.class,*.lo,.git,vendor/*,node_modules/**,bower_components/**,*/build_gradle/*,*/build_intellij/*,*/build/*,*/_build/*

" ========= Shortcuts ========

" No need to press shift ; for every vim command
nnoremap ; :

" NERDTree
map <silent> <leader>nt :NERDTreeToggle<CR>

" Fuzzy Find
map <silent> <leader>ff :CommandT<CR>
map <silent> <leader>fr :CommandTFlush<CR>

" Set paste with leader-pp
map <silent> <leader>pp :set paste!<CR>
